/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2020 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.arakhne.afc.simulation.framework.base.config

import org.arakhne.afc.vmutil.json.JsonBuffer
import org.eclipse.xtend.lib.annotations.Accessors

/**
 * Configuration.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class ChartConfig extends AbstractIdentificableConfig {

	@Accessors(PUBLIC_SETTER)
	var title : String

	@Accessors(PUBLIC_SETTER)
	var ylabel : String

	@Accessors(PUBLIC_SETTER)
	var type : ChartType

	def getTitle : String {
		this.title ?: ""
	}

	def getYLabel : String {
		this.ylabel ?: ""
	}

	def getType : ChartType {
		this.type ?: ChartType::LINE
	}

	override toJson(buffer : JsonBuffer) : void {
		super.toJson(buffer)
		buffer.add("title", getTitle)
		buffer.add("ylabel", getYLabel)
		buffer.add("type", getType)
	}

}
