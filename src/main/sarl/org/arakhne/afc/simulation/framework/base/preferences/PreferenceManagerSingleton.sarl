/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2020 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.arakhne.afc.simulation.framework.base.preferences

import java.util.Map

/**
 * Singleton for the preference manager.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
final class PreferenceManagerSingleton {

	static var singleton : PreferenceManager

	private new {
	}

	/** Replies the singleton. */
	static def getSingleton(type : Class<T>) : T with T extends PreferenceManager {
		synchronized (PreferenceManagerSingleton) {
			assert singleton !== null
			type.cast(singleton)
		}
	}

	/** Change the singleton.
	 */
	static def setSingleton(manager : PreferenceManager) {
		synchronized (PreferenceManagerSingleton) {
			var prefs : Map<String, String> = null
			if (singleton !== null) {
				prefs = singleton.preferenceOverride
			}
			singleton = manager
			if (prefs !== null) {
				singleton.overridePreferences(prefs)
			}
		}
	}

}
